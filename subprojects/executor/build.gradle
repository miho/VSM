buildscript {

    ext.vmfPluginIntelliJIntegration = true

    repositories {
        maven { url 'https://jitpack.io' }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath "eu.mihosoft.vmf:vmf-gradle-plugin:${rootProject.commonProps.get("vmf.version")}"
    }
}

plugins {
    id 'application'
    id 'idea'

//    id 'com.github.hierynomus.license' version '0.14.0'
    id 'maven-publish'
    id 'net.nemerosa.versioning' version '2.7.1'
    id 'com.github.ben-manes.versions' version '0.13.0'
}



// load plugins
//apply plugin: 'eu.mihosoft.vmf'
apply from: 'gradle/publishing.gradle'


repositories {
    maven { url 'https://jitpack.io' }
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest:2.2'

//    vmfCompile "com.github.miho:VMF:${rootProject.commonProps.get("vmf.version")}"
//    vmfCompileTest "com.github.miho:VMF:${rootProject.commonProps.get("vmf.version")}"

    implementation "eu.mihosoft.vmf:vmf-runtime:${rootProject.commonProps.get("vmf.version")}"

    implementation "eu.mihosoft.asyncutils:asyncutils:${rootProject.commonProps.get("asyncutils.version")}"

    implementation "org.tinylog:tinylog-api:${rootProject.commonProps.get("tinylog.version")}"
    implementation "org.tinylog:tinylog-impl:${rootProject.commonProps.get("tinylog.version")}"

    implementation project(":subprojects:fsm")
}

// compileTestJava.options.compilerArgs.add("--enable-preview")
// compileTestJava.options.compilerArgs.add("-Xlint:preview")

mainClassName = 'eu.mihosoft.vsm.executor.App'